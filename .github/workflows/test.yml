name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-test:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13"]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup uv (Python ${{ matrix.python-version }})
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            .venv
          key: ${{ runner.os }}-uv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-${{ matrix.python-version }}-

      - name: Display versions
        run: |
          uv --version
          python -V

      - name: Sync project dependencies (dev)
        run: uv sync --group dev --all-extras

      - name: Lint (pre-commit via Poe)
        run: uv run poe lint

      - name: Type check (mypy)
        run: uv run mypy src tests examples

      - name: Run tests (pytest + coverage via Poe)
        run: uv run poe test

      - name: Upload reports (mypy/pytest/coverage)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reports-${{ runner.os }}-py${{ matrix.python-version }}
          path: |
            reports/**
          if-no-files-found: warn
