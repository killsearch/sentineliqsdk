from __future__ import annotations

import argparse
import json
import sys

from sentineliqsdk.extractors import Extractor
from sentineliqsdk.extractors.custom.{SNAKE_NAME}_detector import {CLASS_NAME}


def main(argv: list[str]) -> int:
    parser = argparse.ArgumentParser(description="Run {CLASS_NAME} detector example")
    parser.add_argument("--execute", action="store_true", help="Execute real run (default: dry-run)")
    args = parser.parse_args(argv)

    if not args.execute:
        print("Modo dry-run. Use --execute para executar o detector.")
        return 0

    ext = Extractor()
    ext.register_detector({CLASS_NAME}(), before="hash")
    values = ["foo", "MY:example", "bar"]
    results = [r.__dict__ for r in ext.check_iterable(values)]
    print(json.dumps(results, ensure_ascii=False))
    return 0


if __name__ == "__main__":
    raise SystemExit(main(sys.argv[1:]))

